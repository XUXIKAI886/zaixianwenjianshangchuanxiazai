name: 部署到GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# 设置GITHUB_TOKEN权限以允许部署到GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许一个并发部署，跳过正在运行中和最新队列之间的运行队列
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 检测包管理器
      id: detect-package-manager
      run: |
        if [ -f "${{ github.workspace }}/yarn.lock" ]; then
          echo "manager=yarn" >> $GITHUB_OUTPUT
          echo "command=install" >> $GITHUB_OUTPUT
          echo "runner=yarn" >> $GITHUB_OUTPUT
          exit 0
        elif [ -f "${{ github.workspace }}/package.json" ]; then
          echo "manager=npm" >> $GITHUB_OUTPUT
          echo "command=ci" >> $GITHUB_OUTPUT
          echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          exit 0
        else
          echo "无法检测到支持的包管理器"
          exit 1
        fi
        
    - name: 设置Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "18"
        cache: ${{ steps.detect-package-manager.outputs.manager }}
        
    - name: 设置GitHub Pages
      uses: actions/configure-pages@v4
      with:
        static_site_generator: next
        
    - name: 恢复缓存
      uses: actions/cache@v3
      with:
        path: |
          .next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
          
    - name: 安装依赖
      run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      
    - name: 构建Next.js应用
      run: ${{ steps.detect-package-manager.outputs.runner }} next build
      env:
        # 在GitHub Pages部署时，这些环境变量需要在仓库设置中配置
        NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME: ${{ secrets.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME }}
        NEXT_PUBLIC_CLOUDINARY_API_KEY: ${{ secrets.NEXT_PUBLIC_CLOUDINARY_API_KEY }}
        
    - name: 上传构建产物
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 部署到GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4